// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.commands;
import java.util.concurrent.DelayQueue;

import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.robot.BallIndexerConstants;
import frc.robot.BallShooterConstants;
import frc.robot.Robot;
import frc.robot.RobotContainer;
import frc.robot.subsystems.BallIndexer;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import frc.robot.subsystems.BallShooter;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class autonimousShoot extends CommandBase {
    double hoodEncoderUnits = 0;
    double area = 0;
    double rpms = 0;
    Integer numberOfBalls = 0;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
        private final BallShooter m_ballShooter;
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS


    public autonimousShoot(BallShooter subsystem) {


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

        m_ballShooter = subsystem;
        addRequirements(m_ballShooter);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    runIndexBelt indexBeltRunner;
    // Called when the command is initially scheduled.
    @Override
    public void initialize() {
        area = 70; //default
        rpms = BallShooterConstants.targetPercent2ShooterParms.floorEntry((int)area).getValue()[0];
        hoodEncoderUnits = BallShooterConstants.targetPercent2ShooterParms.floorEntry((int)area).getValue()[0];
        
        //setTimeout(5);
        indexBeltRunner = new runIndexBelt(BallIndexerConstants.indexMotorSpeed, RobotContainer.getInstance().getm_balIndexer());
        RobotContainer.getInstance().m_ballIndexer.setAutoIndex(false);

        RobotContainer.getInstance().m_ballIndexer.incrementPwrCellCount();
        RobotContainer.getInstance().m_ballIndexer.incrementPwrCellCount();
        RobotContainer.getInstance().m_ballIndexer.incrementPwrCellCount();
        numberOfBalls = RobotContainer.getInstance().m_ballIndexer.ballCount();

    }


    // Called every time the scheduler runs while the command is scheduled.
    @Override
    public void execute() {
        if (RobotContainer.getInstance().m_ballShooter.ready2Shoot(rpms, hoodEncoderUnits)) {
            if (!indexBeltRunner.isScheduled()) {
                //System.out.println("Running belt motor");
                RobotContainer.getInstance().m_ballIndexer.startIndexBelt(1);
            
            }
        } else {
            if (indexBeltRunner.isScheduled()) {
                //System.out.println("cancelling belt motor");

                RobotContainer.getInstance().getm_balIndexer().stopIndexMotor();
            }
        }
    }

    // Called once the command ends or is interrupted.
    @Override
    public void end(boolean interrupted) {
        if (indexBeltRunner.isScheduled()) {
            RobotContainer.getInstance().getm_balIndexer().stopIndexMotor();
        }
        RobotContainer.getInstance().getm_balIndexer().setAutoIndex(true);
    }

    // Returns true when the command should end.
    @Override
    public boolean isFinished() {
        return RobotContainer.getInstance().m_ballIndexer.ballCount() == 0;
    }

    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}
